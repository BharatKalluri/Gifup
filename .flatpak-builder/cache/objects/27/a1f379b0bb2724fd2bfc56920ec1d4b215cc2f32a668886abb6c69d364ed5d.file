/* Utils.c generated by valac 0.40.3, the Vala compiler
 * generated from Utils.vala, do not modify */



#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <gtk/gtk.h>
#include <gio/gio.h>
#include <glib/gi18n-lib.h>
#include <float.h>
#include <math.h>
#include <glib/gstdio.h>

#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _Block1Data Block1Data;
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
typedef struct _Block2Data Block2Data;
typedef struct _GifupUtilsExecuteCommandAsyncData GifupUtilsExecuteCommandAsyncData;
typedef struct _Block3Data Block3Data;

struct _Block1Data {
	int _ref_count_;
	gchar* gifout_path;
	GtkSpinner* spinner;
};

struct _Block2Data {
	int _ref_count_;
	gchar* gifout_path;
	GtkSpinner* spinner;
};

struct _GifupUtilsExecuteCommandAsyncData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	gchar** spawn_args;
	gint spawn_args_length1;
	GSubprocess* result;
	GSubprocessLauncher* launcher;
	GSubprocessLauncher* _tmp0_;
	GSubprocess* subprocess;
	GSubprocessLauncher* _tmp1_;
	GSubprocess* _tmp2_;
	GInputStream* input_stream;
	GSubprocess* _tmp3_;
	GInputStream* _tmp4_;
	GInputStream* _tmp5_;
	GDataInputStream* data_input_stream;
	GInputStream* _tmp6_;
	GDataInputStream* _tmp7_;
	gchar* str_return;
	GDataInputStream* _tmp8_;
	gchar* _tmp9_;
	const gchar* _tmp10_;
	const gchar* _tmp11_;
	GError* e;
	GError* _tmp12_;
	const gchar* _tmp13_;
	GError * _inner_error_;
};

struct _Block3Data {
	int _ref_count_;
	gchar* path;
	gchar* selected_file;
	GtkImage* image_widget;
};



void gifup_utils_complete_gif_create (const gchar* selected_file,
                                      GtkSpinButton* entry_fps,
                                      GtkSpinButton* entry_height,
                                      GtkSpinButton* entry_width,
                                      GtkSpinner* spinner);
static Block1Data* block1_data_ref (Block1Data* _data1_);
static void block1_data_unref (void * _userdata_);
void gifup_utils_execute_command_async (gchar** spawn_args,
                                        int spawn_args_length1,
                                        GAsyncReadyCallback _callback_,
                                        gpointer _user_data_);
GSubprocess* gifup_utils_execute_command_finish (GAsyncResult* _res_);
static void __lambda11_ (Block1Data* _data1_,
                  GObject* obj,
                  GAsyncResult* async_res);
void gifup_utils_create_dialog (const gchar* text);
static void ___lambda11__gasync_ready_callback (GObject* source_object,
                                         GAsyncResult* res,
                                         gpointer self);
void gifup_utils_gif_create (const gchar* selected_file,
                             GtkEntry* entry_end,
                             GtkEntry* entry_start,
                             GtkSpinButton* entry_fps,
                             GtkSpinButton* entry_height,
                             GtkSpinButton* entry_width,
                             GtkSpinner* spinner);
static Block2Data* block2_data_ref (Block2Data* _data2_);
static void block2_data_unref (void * _userdata_);
gint gifup_utils_duration_in_seconds (const gchar* duration);
static void __lambda9_ (Block2Data* _data2_,
                 GObject* obj,
                 GAsyncResult* async_res);
static void ___lambda9__gasync_ready_callback (GObject* source_object,
                                        GAsyncResult* res,
                                        gpointer self);
GtkLabel* gifup_utils_create_left_label (const gchar* text);
static void gifup_utils_execute_command_async_data_free (gpointer _data);
static void gifup_utils_execute_command_async_async_ready_wrapper (GObject *source_object,
                                                            GAsyncResult *res,
                                                            void *user_data);
static gboolean gifup_utils_execute_command_async_co (GifupUtilsExecuteCommandAsyncData* _data_);
static void gifup_utils_execute_command_async_ready (GObject* source_object,
                                              GAsyncResult* _res_,
                                              gpointer _user_data_);
void gifup_utils_frame_picture (const gchar* selected_file,
                                const gchar* frame_number,
                                const gchar* file_name,
                                GtkImage* image_widget);
static Block3Data* block3_data_ref (Block3Data* _data3_);
static void block3_data_unref (void * _userdata_);
static void __lambda5_ (Block3Data* _data3_,
                 GObject* obj,
                 GAsyncResult* async_res);
static void ___lambda5__gasync_ready_callback (GObject* source_object,
                                        GAsyncResult* res,
                                        gpointer self);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);
static gint _vala_array_length (gpointer array);


static gpointer
_g_object_ref0 (gpointer self)
{
#line 3 "/run/build/gifup/src/Utils.vala"
	return self ? g_object_ref (self) : NULL;
#line 150 "Utils.c"
}


static Block1Data*
block1_data_ref (Block1Data* _data1_)
{
#line 3 "/run/build/gifup/src/Utils.vala"
	g_atomic_int_inc (&_data1_->_ref_count_);
#line 3 "/run/build/gifup/src/Utils.vala"
	return _data1_;
#line 161 "Utils.c"
}


static void
block1_data_unref (void * _userdata_)
{
	Block1Data* _data1_;
	_data1_ = (Block1Data*) _userdata_;
#line 3 "/run/build/gifup/src/Utils.vala"
	if (g_atomic_int_dec_and_test (&_data1_->_ref_count_)) {
#line 3 "/run/build/gifup/src/Utils.vala"
		_g_free0 (_data1_->gifout_path);
#line 3 "/run/build/gifup/src/Utils.vala"
		_g_object_unref0 (_data1_->spinner);
#line 3 "/run/build/gifup/src/Utils.vala"
		g_slice_free (Block1Data, _data1_);
#line 178 "Utils.c"
	}
}


static void
__lambda11_ (Block1Data* _data1_,
             GObject* obj,
             GAsyncResult* async_res)
{
	GSubprocess* subprocess = NULL;
	GSubprocess* _tmp0_;
	GError * _inner_error_ = NULL;
#line 7 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (async_res != NULL);
#line 8 "/run/build/gifup/src/Utils.vala"
	_tmp0_ = gifup_utils_execute_command_finish (async_res);
#line 8 "/run/build/gifup/src/Utils.vala"
	subprocess = _tmp0_;
#line 197 "Utils.c"
	{
		gboolean _tmp1_ = FALSE;
		GSubprocess* _tmp2_;
#line 10 "/run/build/gifup/src/Utils.vala"
		_tmp2_ = subprocess;
#line 10 "/run/build/gifup/src/Utils.vala"
		if (_tmp2_ != NULL) {
#line 205 "Utils.c"
			gboolean _tmp3_ = FALSE;
			GSubprocess* _tmp4_;
#line 10 "/run/build/gifup/src/Utils.vala"
			_tmp4_ = subprocess;
#line 10 "/run/build/gifup/src/Utils.vala"
			_tmp3_ = g_subprocess_wait_check (_tmp4_, NULL, &_inner_error_);
#line 10 "/run/build/gifup/src/Utils.vala"
			if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 214 "Utils.c"
				goto __catch0_g_error;
			}
#line 10 "/run/build/gifup/src/Utils.vala"
			_tmp1_ = _tmp3_;
#line 219 "Utils.c"
		} else {
#line 10 "/run/build/gifup/src/Utils.vala"
			_tmp1_ = FALSE;
#line 223 "Utils.c"
		}
#line 10 "/run/build/gifup/src/Utils.vala"
		if (_tmp1_) {
#line 227 "Utils.c"
			gchar* _tmp5_;
			gchar* _tmp6_;
#line 11 "/run/build/gifup/src/Utils.vala"
			_tmp5_ = g_strdup_printf (_ ("Gif is Up at %s!"), _data1_->gifout_path);
#line 11 "/run/build/gifup/src/Utils.vala"
			_tmp6_ = _tmp5_;
#line 11 "/run/build/gifup/src/Utils.vala"
			gifup_utils_create_dialog (_tmp6_);
#line 11 "/run/build/gifup/src/Utils.vala"
			_g_free0 (_tmp6_);
#line 238 "Utils.c"
		}
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp7_;
		const gchar* _tmp8_;
#line 9 "/run/build/gifup/src/Utils.vala"
		e = _inner_error_;
#line 9 "/run/build/gifup/src/Utils.vala"
		_inner_error_ = NULL;
#line 15 "/run/build/gifup/src/Utils.vala"
		_tmp7_ = e;
#line 15 "/run/build/gifup/src/Utils.vala"
		_tmp8_ = _tmp7_->message;
#line 15 "/run/build/gifup/src/Utils.vala"
		g_critical ("Utils.vala:15: %s", _tmp8_);
#line 16 "/run/build/gifup/src/Utils.vala"
		gifup_utils_create_dialog (_ ("Check if all fields have sane values and try again."));
#line 9 "/run/build/gifup/src/Utils.vala"
		_g_error_free0 (e);
#line 261 "Utils.c"
	}
	__finally0:
#line 9 "/run/build/gifup/src/Utils.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 9 "/run/build/gifup/src/Utils.vala"
		_g_object_unref0 (subprocess);
#line 9 "/run/build/gifup/src/Utils.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 9 "/run/build/gifup/src/Utils.vala"
		g_clear_error (&_inner_error_);
#line 9 "/run/build/gifup/src/Utils.vala"
		return;
#line 274 "Utils.c"
	}
#line 18 "/run/build/gifup/src/Utils.vala"
	g_object_set (_data1_->spinner, "active", FALSE, NULL);
#line 7 "/run/build/gifup/src/Utils.vala"
	_g_object_unref0 (subprocess);
#line 280 "Utils.c"
}


static void
___lambda11__gasync_ready_callback (GObject* source_object,
                                    GAsyncResult* res,
                                    gpointer self)
{
#line 7 "/run/build/gifup/src/Utils.vala"
	__lambda11_ (self, source_object, res);
#line 7 "/run/build/gifup/src/Utils.vala"
	block1_data_unref (self);
#line 293 "Utils.c"
}


void
gifup_utils_complete_gif_create (const gchar* selected_file,
                                 GtkSpinButton* entry_fps,
                                 GtkSpinButton* entry_height,
                                 GtkSpinButton* entry_width,
                                 GtkSpinner* spinner)
{
	Block1Data* _data1_;
	GtkSpinner* _tmp0_;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	gchar** cmd = NULL;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	gchar* _tmp6_;
	const gchar* _tmp7_;
	const gchar* _tmp8_;
	gchar* _tmp9_;
	gchar* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	gchar* _tmp13_;
	gchar* _tmp14_;
	gchar* _tmp15_;
	gchar* _tmp16_;
	const gchar* _tmp17_;
	const gchar* _tmp18_;
	gchar* _tmp19_;
	gchar* _tmp20_;
	gchar* _tmp21_;
	gchar** _tmp22_;
	gchar** _tmp23_;
	gint _tmp23__length1;
	gint cmd_length1;
	gint _cmd_size_;
#line 3 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (selected_file != NULL);
#line 3 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (entry_fps != NULL);
#line 3 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (entry_height != NULL);
#line 3 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (entry_width != NULL);
#line 3 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (spinner != NULL);
#line 3 "/run/build/gifup/src/Utils.vala"
	_data1_ = g_slice_new0 (Block1Data);
#line 3 "/run/build/gifup/src/Utils.vala"
	_data1_->_ref_count_ = 1;
#line 3 "/run/build/gifup/src/Utils.vala"
	_tmp0_ = _g_object_ref0 (spinner);
#line 3 "/run/build/gifup/src/Utils.vala"
	_g_object_unref0 (_data1_->spinner);
#line 3 "/run/build/gifup/src/Utils.vala"
	_data1_->spinner = _tmp0_;
#line 4 "/run/build/gifup/src/Utils.vala"
	_tmp1_ = g_get_home_dir ();
#line 4 "/run/build/gifup/src/Utils.vala"
	_tmp2_ = g_build_filename (_tmp1_, "Downloads", "gifout.gif", NULL);
#line 4 "/run/build/gifup/src/Utils.vala"
	_data1_->gifout_path = _tmp2_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp3_ = g_strdup ("ffmpeg");
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp4_ = g_strdup ("-i");
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp5_ = g_strdup (selected_file);
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp6_ = g_strdup ("-r");
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp7_ = gtk_entry_get_text ((GtkEntry*) entry_fps);
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp8_ = _tmp7_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp9_ = g_strdup (_tmp8_);
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp10_ = g_strdup ("-vf");
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp11_ = gtk_entry_get_text ((GtkEntry*) entry_width);
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp12_ = _tmp11_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp13_ = g_strconcat ("scale=", _tmp12_, NULL);
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp14_ = _tmp13_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp15_ = g_strconcat (_tmp14_, ":", NULL);
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp16_ = _tmp15_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp17_ = gtk_entry_get_text ((GtkEntry*) entry_height);
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp18_ = _tmp17_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp19_ = g_strconcat (_tmp16_, _tmp18_, NULL);
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp20_ = g_strdup (_data1_->gifout_path);
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp21_ = g_strdup ("-y");
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp22_ = g_new0 (gchar*, 9 + 1);
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp22_[0] = _tmp3_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp22_[1] = _tmp4_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp22_[2] = _tmp5_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp22_[3] = _tmp6_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp22_[4] = _tmp9_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp22_[5] = _tmp10_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp22_[6] = _tmp19_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp22_[7] = _tmp20_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp22_[8] = _tmp21_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp23_ = _tmp22_;
#line 6 "/run/build/gifup/src/Utils.vala"
	_tmp23__length1 = 9;
#line 6 "/run/build/gifup/src/Utils.vala"
	_g_free0 (_tmp16_);
#line 6 "/run/build/gifup/src/Utils.vala"
	_g_free0 (_tmp14_);
#line 6 "/run/build/gifup/src/Utils.vala"
	cmd = _tmp23_;
#line 6 "/run/build/gifup/src/Utils.vala"
	cmd_length1 = _tmp23__length1;
#line 6 "/run/build/gifup/src/Utils.vala"
	_cmd_size_ = cmd_length1;
#line 7 "/run/build/gifup/src/Utils.vala"
	gifup_utils_execute_command_async (cmd, cmd_length1, ___lambda11__gasync_ready_callback, block1_data_ref (_data1_));
#line 3 "/run/build/gifup/src/Utils.vala"
	cmd = (_vala_array_free (cmd, cmd_length1, (GDestroyNotify) g_free), NULL);
#line 3 "/run/build/gifup/src/Utils.vala"
	block1_data_unref (_data1_);
#line 3 "/run/build/gifup/src/Utils.vala"
	_data1_ = NULL;
#line 439 "Utils.c"
}


static Block2Data*
block2_data_ref (Block2Data* _data2_)
{
#line 22 "/run/build/gifup/src/Utils.vala"
	g_atomic_int_inc (&_data2_->_ref_count_);
#line 22 "/run/build/gifup/src/Utils.vala"
	return _data2_;
#line 450 "Utils.c"
}


static void
block2_data_unref (void * _userdata_)
{
	Block2Data* _data2_;
	_data2_ = (Block2Data*) _userdata_;
#line 22 "/run/build/gifup/src/Utils.vala"
	if (g_atomic_int_dec_and_test (&_data2_->_ref_count_)) {
#line 22 "/run/build/gifup/src/Utils.vala"
		_g_free0 (_data2_->gifout_path);
#line 22 "/run/build/gifup/src/Utils.vala"
		_g_object_unref0 (_data2_->spinner);
#line 22 "/run/build/gifup/src/Utils.vala"
		g_slice_free (Block2Data, _data2_);
#line 467 "Utils.c"
	}
}


static void
__lambda9_ (Block2Data* _data2_,
            GObject* obj,
            GAsyncResult* async_res)
{
	GSubprocess* subprocess = NULL;
	GSubprocess* _tmp0_;
	GError * _inner_error_ = NULL;
#line 27 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (async_res != NULL);
#line 28 "/run/build/gifup/src/Utils.vala"
	_tmp0_ = gifup_utils_execute_command_finish (async_res);
#line 28 "/run/build/gifup/src/Utils.vala"
	subprocess = _tmp0_;
#line 486 "Utils.c"
	{
		gboolean _tmp1_ = FALSE;
		GSubprocess* _tmp2_;
#line 30 "/run/build/gifup/src/Utils.vala"
		_tmp2_ = subprocess;
#line 30 "/run/build/gifup/src/Utils.vala"
		if (_tmp2_ != NULL) {
#line 494 "Utils.c"
			gboolean _tmp3_ = FALSE;
			GSubprocess* _tmp4_;
#line 30 "/run/build/gifup/src/Utils.vala"
			_tmp4_ = subprocess;
#line 30 "/run/build/gifup/src/Utils.vala"
			_tmp3_ = g_subprocess_wait_check (_tmp4_, NULL, &_inner_error_);
#line 30 "/run/build/gifup/src/Utils.vala"
			if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 503 "Utils.c"
				goto __catch1_g_error;
			}
#line 30 "/run/build/gifup/src/Utils.vala"
			_tmp1_ = _tmp3_;
#line 508 "Utils.c"
		} else {
#line 30 "/run/build/gifup/src/Utils.vala"
			_tmp1_ = FALSE;
#line 512 "Utils.c"
		}
#line 30 "/run/build/gifup/src/Utils.vala"
		if (_tmp1_) {
#line 516 "Utils.c"
			gchar* _tmp5_;
			gchar* _tmp6_;
#line 31 "/run/build/gifup/src/Utils.vala"
			_tmp5_ = g_strdup_printf (_ ("Gif is Up at %s!"), _data2_->gifout_path);
#line 31 "/run/build/gifup/src/Utils.vala"
			_tmp6_ = _tmp5_;
#line 31 "/run/build/gifup/src/Utils.vala"
			gifup_utils_create_dialog (_tmp6_);
#line 31 "/run/build/gifup/src/Utils.vala"
			_g_free0 (_tmp6_);
#line 527 "Utils.c"
		}
	}
	goto __finally1;
	__catch1_g_error:
	{
		GError* e = NULL;
		GError* _tmp7_;
		const gchar* _tmp8_;
#line 29 "/run/build/gifup/src/Utils.vala"
		e = _inner_error_;
#line 29 "/run/build/gifup/src/Utils.vala"
		_inner_error_ = NULL;
#line 35 "/run/build/gifup/src/Utils.vala"
		_tmp7_ = e;
#line 35 "/run/build/gifup/src/Utils.vala"
		_tmp8_ = _tmp7_->message;
#line 35 "/run/build/gifup/src/Utils.vala"
		g_critical ("Utils.vala:35: %s", _tmp8_);
#line 36 "/run/build/gifup/src/Utils.vala"
		gifup_utils_create_dialog (_ ("Check if all fields have sane values and try again."));
#line 29 "/run/build/gifup/src/Utils.vala"
		_g_error_free0 (e);
#line 550 "Utils.c"
	}
	__finally1:
#line 29 "/run/build/gifup/src/Utils.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 29 "/run/build/gifup/src/Utils.vala"
		_g_object_unref0 (subprocess);
#line 29 "/run/build/gifup/src/Utils.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 29 "/run/build/gifup/src/Utils.vala"
		g_clear_error (&_inner_error_);
#line 29 "/run/build/gifup/src/Utils.vala"
		return;
#line 563 "Utils.c"
	}
#line 38 "/run/build/gifup/src/Utils.vala"
	g_object_set (_data2_->spinner, "active", FALSE, NULL);
#line 27 "/run/build/gifup/src/Utils.vala"
	_g_object_unref0 (subprocess);
#line 569 "Utils.c"
}


static void
___lambda9__gasync_ready_callback (GObject* source_object,
                                   GAsyncResult* res,
                                   gpointer self)
{
#line 27 "/run/build/gifup/src/Utils.vala"
	__lambda9_ (self, source_object, res);
#line 27 "/run/build/gifup/src/Utils.vala"
	block2_data_unref (self);
#line 582 "Utils.c"
}


void
gifup_utils_gif_create (const gchar* selected_file,
                        GtkEntry* entry_end,
                        GtkEntry* entry_start,
                        GtkSpinButton* entry_fps,
                        GtkSpinButton* entry_height,
                        GtkSpinButton* entry_width,
                        GtkSpinner* spinner)
{
	Block2Data* _data2_;
	GtkSpinner* _tmp0_;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	gint difference = 0;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
	const gchar* _tmp6_;
	gchar** cmd = NULL;
	gchar* _tmp7_;
	gchar* _tmp8_;
	const gchar* _tmp9_;
	const gchar* _tmp10_;
	gchar* _tmp11_;
	gchar* _tmp12_;
	gchar* _tmp13_;
	gchar* _tmp14_;
	gchar* _tmp15_;
	gchar* _tmp16_;
	const gchar* _tmp17_;
	const gchar* _tmp18_;
	gchar* _tmp19_;
	gchar* _tmp20_;
	const gchar* _tmp21_;
	const gchar* _tmp22_;
	gchar* _tmp23_;
	gchar* _tmp24_;
	gchar* _tmp25_;
	gchar* _tmp26_;
	const gchar* _tmp27_;
	const gchar* _tmp28_;
	gchar* _tmp29_;
	gchar* _tmp30_;
	gchar* _tmp31_;
	gchar** _tmp32_;
	gchar** _tmp33_;
	gint _tmp33__length1;
	gint cmd_length1;
	gint _cmd_size_;
#line 22 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (selected_file != NULL);
#line 22 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (entry_end != NULL);
#line 22 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (entry_start != NULL);
#line 22 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (entry_fps != NULL);
#line 22 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (entry_height != NULL);
#line 22 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (entry_width != NULL);
#line 22 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (spinner != NULL);
#line 22 "/run/build/gifup/src/Utils.vala"
	_data2_ = g_slice_new0 (Block2Data);
#line 22 "/run/build/gifup/src/Utils.vala"
	_data2_->_ref_count_ = 1;
#line 22 "/run/build/gifup/src/Utils.vala"
	_tmp0_ = _g_object_ref0 (spinner);
#line 22 "/run/build/gifup/src/Utils.vala"
	_g_object_unref0 (_data2_->spinner);
#line 22 "/run/build/gifup/src/Utils.vala"
	_data2_->spinner = _tmp0_;
#line 23 "/run/build/gifup/src/Utils.vala"
	_tmp1_ = g_get_home_dir ();
#line 23 "/run/build/gifup/src/Utils.vala"
	_tmp2_ = g_build_filename (_tmp1_, "Downloads", "gifout.gif", NULL);
#line 23 "/run/build/gifup/src/Utils.vala"
	_data2_->gifout_path = _tmp2_;
#line 24 "/run/build/gifup/src/Utils.vala"
	_tmp3_ = gtk_entry_get_text (entry_end);
#line 24 "/run/build/gifup/src/Utils.vala"
	_tmp4_ = _tmp3_;
#line 24 "/run/build/gifup/src/Utils.vala"
	_tmp5_ = gtk_entry_get_text (entry_start);
#line 24 "/run/build/gifup/src/Utils.vala"
	_tmp6_ = _tmp5_;
#line 24 "/run/build/gifup/src/Utils.vala"
	difference = gifup_utils_duration_in_seconds (_tmp4_) - gifup_utils_duration_in_seconds (_tmp6_);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp7_ = g_strdup ("ffmpeg");
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp8_ = g_strdup ("-ss");
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp9_ = gtk_entry_get_text (entry_start);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp10_ = _tmp9_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp11_ = g_strdup_printf ("%i", gifup_utils_duration_in_seconds (_tmp10_));
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp12_ = g_strdup ("-i");
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp13_ = g_strdup (selected_file);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp14_ = g_strdup ("-to");
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp15_ = g_strdup_printf ("%i", difference);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp16_ = g_strdup ("-r");
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp17_ = gtk_entry_get_text ((GtkEntry*) entry_fps);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp18_ = _tmp17_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp19_ = g_strdup (_tmp18_);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp20_ = g_strdup ("-vf");
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp21_ = gtk_entry_get_text ((GtkEntry*) entry_width);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp22_ = _tmp21_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp23_ = g_strconcat ("scale=", _tmp22_, NULL);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp24_ = _tmp23_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp25_ = g_strconcat (_tmp24_, ":", NULL);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp26_ = _tmp25_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp27_ = gtk_entry_get_text ((GtkEntry*) entry_height);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp28_ = _tmp27_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp29_ = g_strconcat (_tmp26_, _tmp28_, NULL);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp30_ = g_strdup (_data2_->gifout_path);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp31_ = g_strdup ("-y");
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_ = g_new0 (gchar*, 13 + 1);
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[0] = _tmp7_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[1] = _tmp8_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[2] = _tmp11_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[3] = _tmp12_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[4] = _tmp13_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[5] = _tmp14_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[6] = _tmp15_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[7] = _tmp16_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[8] = _tmp19_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[9] = _tmp20_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[10] = _tmp29_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[11] = _tmp30_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp32_[12] = _tmp31_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp33_ = _tmp32_;
#line 26 "/run/build/gifup/src/Utils.vala"
	_tmp33__length1 = 13;
#line 26 "/run/build/gifup/src/Utils.vala"
	_g_free0 (_tmp26_);
#line 26 "/run/build/gifup/src/Utils.vala"
	_g_free0 (_tmp24_);
#line 26 "/run/build/gifup/src/Utils.vala"
	cmd = _tmp33_;
#line 26 "/run/build/gifup/src/Utils.vala"
	cmd_length1 = _tmp33__length1;
#line 26 "/run/build/gifup/src/Utils.vala"
	_cmd_size_ = cmd_length1;
#line 27 "/run/build/gifup/src/Utils.vala"
	gifup_utils_execute_command_async (cmd, cmd_length1, ___lambda9__gasync_ready_callback, block2_data_ref (_data2_));
#line 22 "/run/build/gifup/src/Utils.vala"
	cmd = (_vala_array_free (cmd, cmd_length1, (GDestroyNotify) g_free), NULL);
#line 22 "/run/build/gifup/src/Utils.vala"
	block2_data_unref (_data2_);
#line 22 "/run/build/gifup/src/Utils.vala"
	_data2_ = NULL;
#line 775 "Utils.c"
}


void
gifup_utils_create_dialog (const gchar* text)
{
	GtkMessageDialog* dialog = NULL;
	GtkMessageDialog* _tmp0_;
#line 42 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (text != NULL);
#line 43 "/run/build/gifup/src/Utils.vala"
	_tmp0_ = (GtkMessageDialog*) gtk_message_dialog_new (NULL, GTK_DIALOG_MODAL, GTK_MESSAGE_INFO, GTK_BUTTONS_OK, "%s", text);
#line 43 "/run/build/gifup/src/Utils.vala"
	g_object_ref_sink (_tmp0_);
#line 43 "/run/build/gifup/src/Utils.vala"
	dialog = _tmp0_;
#line 44 "/run/build/gifup/src/Utils.vala"
	gtk_window_set_title ((GtkWindow*) dialog, _ ("Status"));
#line 45 "/run/build/gifup/src/Utils.vala"
	gtk_dialog_run ((GtkDialog*) dialog);
#line 46 "/run/build/gifup/src/Utils.vala"
	gtk_widget_destroy ((GtkWidget*) dialog);
#line 42 "/run/build/gifup/src/Utils.vala"
	_g_object_unref0 (dialog);
#line 800 "Utils.c"
}


GtkLabel*
gifup_utils_create_left_label (const gchar* text)
{
	GtkLabel* result = NULL;
	GtkLabel* label = NULL;
	gchar* _tmp0_;
	gchar* _tmp1_;
	GtkLabel* _tmp2_;
	GtkLabel* _tmp3_;
#line 49 "/run/build/gifup/src/Utils.vala"
	g_return_val_if_fail (text != NULL, NULL);
#line 50 "/run/build/gifup/src/Utils.vala"
	_tmp0_ = g_markup_printf_escaped ("<b>%s</b>", text);
#line 50 "/run/build/gifup/src/Utils.vala"
	_tmp1_ = _tmp0_;
#line 50 "/run/build/gifup/src/Utils.vala"
	_tmp2_ = (GtkLabel*) gtk_label_new (_tmp1_);
#line 50 "/run/build/gifup/src/Utils.vala"
	g_object_ref_sink (_tmp2_);
#line 50 "/run/build/gifup/src/Utils.vala"
	_tmp3_ = _tmp2_;
#line 50 "/run/build/gifup/src/Utils.vala"
	_g_free0 (_tmp1_);
#line 50 "/run/build/gifup/src/Utils.vala"
	label = _tmp3_;
#line 51 "/run/build/gifup/src/Utils.vala"
	gtk_label_set_xalign (label, (gfloat) 1);
#line 52 "/run/build/gifup/src/Utils.vala"
	gtk_label_set_use_markup (label, TRUE);
#line 53 "/run/build/gifup/src/Utils.vala"
	result = label;
#line 53 "/run/build/gifup/src/Utils.vala"
	return result;
#line 837 "Utils.c"
}


gint
gifup_utils_duration_in_seconds (const gchar* duration)
{
	gint result = 0;
	gchar** str = NULL;
	gchar** _tmp0_;
	gchar** _tmp1_;
	gint str_length1;
	gint _str_size_;
	gchar** time = NULL;
	gchar** _tmp2_;
	gint _tmp2__length1;
	const gchar* _tmp3_;
	gchar** _tmp4_;
	gchar** _tmp5_;
	gint time_length1;
	gint _time_size_;
	gint hours = 0;
	gint mins = 0;
	gint secs = 0;
	gchar** _tmp6_;
	gint _tmp6__length1;
	gint converted_int = 0;
	gint _tmp21_;
	gint _tmp22_;
	gint _tmp23_;
#line 56 "/run/build/gifup/src/Utils.vala"
	g_return_val_if_fail (duration != NULL, 0);
#line 57 "/run/build/gifup/src/Utils.vala"
	_tmp1_ = _tmp0_ = g_strsplit (duration, ".", 0);
#line 57 "/run/build/gifup/src/Utils.vala"
	str = _tmp1_;
#line 57 "/run/build/gifup/src/Utils.vala"
	str_length1 = _vala_array_length (_tmp0_);
#line 57 "/run/build/gifup/src/Utils.vala"
	_str_size_ = str_length1;
#line 58 "/run/build/gifup/src/Utils.vala"
	_tmp2_ = str;
#line 58 "/run/build/gifup/src/Utils.vala"
	_tmp2__length1 = str_length1;
#line 58 "/run/build/gifup/src/Utils.vala"
	_tmp3_ = _tmp2_[0];
#line 58 "/run/build/gifup/src/Utils.vala"
	_tmp5_ = _tmp4_ = g_strsplit (_tmp3_, ":", 0);
#line 58 "/run/build/gifup/src/Utils.vala"
	time = _tmp5_;
#line 58 "/run/build/gifup/src/Utils.vala"
	time_length1 = _vala_array_length (_tmp4_);
#line 58 "/run/build/gifup/src/Utils.vala"
	_time_size_ = time_length1;
#line 59 "/run/build/gifup/src/Utils.vala"
	hours = 0;
#line 60 "/run/build/gifup/src/Utils.vala"
	mins = 0;
#line 61 "/run/build/gifup/src/Utils.vala"
	secs = 0;
#line 62 "/run/build/gifup/src/Utils.vala"
	_tmp6_ = time;
#line 62 "/run/build/gifup/src/Utils.vala"
	_tmp6__length1 = time_length1;
#line 62 "/run/build/gifup/src/Utils.vala"
	if (_tmp6__length1 == 1) {
#line 903 "Utils.c"
		gchar** _tmp7_;
		gint _tmp7__length1;
		const gchar* _tmp8_;
#line 63 "/run/build/gifup/src/Utils.vala"
		_tmp7_ = time;
#line 63 "/run/build/gifup/src/Utils.vala"
		_tmp7__length1 = time_length1;
#line 63 "/run/build/gifup/src/Utils.vala"
		_tmp8_ = _tmp7_[0];
#line 63 "/run/build/gifup/src/Utils.vala"
		secs = atoi (_tmp8_);
#line 915 "Utils.c"
	} else {
		gchar** _tmp9_;
		gint _tmp9__length1;
#line 64 "/run/build/gifup/src/Utils.vala"
		_tmp9_ = time;
#line 64 "/run/build/gifup/src/Utils.vala"
		_tmp9__length1 = time_length1;
#line 64 "/run/build/gifup/src/Utils.vala"
		if (_tmp9__length1 == 2) {
#line 925 "Utils.c"
			gchar** _tmp10_;
			gint _tmp10__length1;
			const gchar* _tmp11_;
			gchar** _tmp12_;
			gint _tmp12__length1;
			const gchar* _tmp13_;
#line 65 "/run/build/gifup/src/Utils.vala"
			_tmp10_ = time;
#line 65 "/run/build/gifup/src/Utils.vala"
			_tmp10__length1 = time_length1;
#line 65 "/run/build/gifup/src/Utils.vala"
			_tmp11_ = _tmp10_[1];
#line 65 "/run/build/gifup/src/Utils.vala"
			secs = atoi (_tmp11_);
#line 66 "/run/build/gifup/src/Utils.vala"
			_tmp12_ = time;
#line 66 "/run/build/gifup/src/Utils.vala"
			_tmp12__length1 = time_length1;
#line 66 "/run/build/gifup/src/Utils.vala"
			_tmp13_ = _tmp12_[0];
#line 66 "/run/build/gifup/src/Utils.vala"
			mins = atoi (_tmp13_);
#line 948 "Utils.c"
		} else {
			gchar** _tmp14_;
			gint _tmp14__length1;
#line 67 "/run/build/gifup/src/Utils.vala"
			_tmp14_ = time;
#line 67 "/run/build/gifup/src/Utils.vala"
			_tmp14__length1 = time_length1;
#line 67 "/run/build/gifup/src/Utils.vala"
			if (_tmp14__length1 == 3) {
#line 958 "Utils.c"
				gchar** _tmp15_;
				gint _tmp15__length1;
				const gchar* _tmp16_;
				gchar** _tmp17_;
				gint _tmp17__length1;
				const gchar* _tmp18_;
				gchar** _tmp19_;
				gint _tmp19__length1;
				const gchar* _tmp20_;
#line 68 "/run/build/gifup/src/Utils.vala"
				_tmp15_ = time;
#line 68 "/run/build/gifup/src/Utils.vala"
				_tmp15__length1 = time_length1;
#line 68 "/run/build/gifup/src/Utils.vala"
				_tmp16_ = _tmp15_[2];
#line 68 "/run/build/gifup/src/Utils.vala"
				secs = atoi (_tmp16_);
#line 69 "/run/build/gifup/src/Utils.vala"
				_tmp17_ = time;
#line 69 "/run/build/gifup/src/Utils.vala"
				_tmp17__length1 = time_length1;
#line 69 "/run/build/gifup/src/Utils.vala"
				_tmp18_ = _tmp17_[1];
#line 69 "/run/build/gifup/src/Utils.vala"
				mins = atoi (_tmp18_);
#line 70 "/run/build/gifup/src/Utils.vala"
				_tmp19_ = time;
#line 70 "/run/build/gifup/src/Utils.vala"
				_tmp19__length1 = time_length1;
#line 70 "/run/build/gifup/src/Utils.vala"
				_tmp20_ = _tmp19_[0];
#line 70 "/run/build/gifup/src/Utils.vala"
				hours = atoi (_tmp20_);
#line 992 "Utils.c"
			}
		}
	}
#line 73 "/run/build/gifup/src/Utils.vala"
	_tmp21_ = secs;
#line 73 "/run/build/gifup/src/Utils.vala"
	_tmp22_ = hours;
#line 73 "/run/build/gifup/src/Utils.vala"
	_tmp23_ = mins;
#line 73 "/run/build/gifup/src/Utils.vala"
	converted_int = (_tmp21_ + (_tmp22_ * 3600)) + (_tmp23_ * 60);
#line 74 "/run/build/gifup/src/Utils.vala"
	result = converted_int;
#line 74 "/run/build/gifup/src/Utils.vala"
	time = (_vala_array_free (time, time_length1, (GDestroyNotify) g_free), NULL);
#line 74 "/run/build/gifup/src/Utils.vala"
	str = (_vala_array_free (str, str_length1, (GDestroyNotify) g_free), NULL);
#line 74 "/run/build/gifup/src/Utils.vala"
	return result;
#line 1012 "Utils.c"
}


static void
gifup_utils_execute_command_async_data_free (gpointer _data)
{
	GifupUtilsExecuteCommandAsyncData* _data_;
	_data_ = _data;
	_g_object_unref0 (_data_->result);
	g_slice_free (GifupUtilsExecuteCommandAsyncData, _data_);
}


static void
gifup_utils_execute_command_async_async_ready_wrapper (GObject *source_object,
                                                       GAsyncResult *res,
                                                       void *user_data)
{
	GifupUtilsExecuteCommandAsyncData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


void
gifup_utils_execute_command_async (gchar** spawn_args,
                                   int spawn_args_length1,
                                   GAsyncReadyCallback _callback_,
                                   gpointer _user_data_)
{
	GifupUtilsExecuteCommandAsyncData* _data_;
	_data_ = g_slice_new0 (GifupUtilsExecuteCommandAsyncData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (NULL, NULL, gifup_utils_execute_command_async_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, gifup_utils_execute_command_async_data_free);
	_data_->spawn_args = spawn_args;
	_data_->spawn_args_length1 = spawn_args_length1;
	gifup_utils_execute_command_async_co (_data_);
}


GSubprocess*
gifup_utils_execute_command_finish (GAsyncResult* _res_)
{
	GSubprocess* result;
	GifupUtilsExecuteCommandAsyncData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
	result = _data_->result;
	_data_->result = NULL;
	return result;
}


static void
gifup_utils_execute_command_async_ready (GObject* source_object,
                                         GAsyncResult* _res_,
                                         gpointer _user_data_)
{
	GifupUtilsExecuteCommandAsyncData* _data_;
#line 91 "/run/build/gifup/src/Utils.vala"
	_data_ = _user_data_;
#line 91 "/run/build/gifup/src/Utils.vala"
	_data_->_source_object_ = source_object;
#line 91 "/run/build/gifup/src/Utils.vala"
	_data_->_res_ = _res_;
#line 91 "/run/build/gifup/src/Utils.vala"
	_data_->_task_complete_ = TRUE;
#line 91 "/run/build/gifup/src/Utils.vala"
	gifup_utils_execute_command_async_co (_data_);
#line 1088 "Utils.c"
}


static gboolean
gifup_utils_execute_command_async_co (GifupUtilsExecuteCommandAsyncData* _data_)
{
#line 77 "/run/build/gifup/src/Utils.vala"
	switch (_data_->_state_) {
#line 77 "/run/build/gifup/src/Utils.vala"
		case 0:
#line 1099 "Utils.c"
		goto _state_0;
#line 77 "/run/build/gifup/src/Utils.vala"
		case 1:
#line 1103 "Utils.c"
		goto _state_1;
		default:
#line 77 "/run/build/gifup/src/Utils.vala"
		g_assert_not_reached ();
#line 1108 "Utils.c"
	}
	_state_0:
#line 79 "/run/build/gifup/src/Utils.vala"
	_data_->_tmp0_ = g_subprocess_launcher_new (G_SUBPROCESS_FLAGS_STDOUT_PIPE);
#line 79 "/run/build/gifup/src/Utils.vala"
	_data_->launcher = _data_->_tmp0_;
#line 1115 "Utils.c"
	{
#line 82 "/run/build/gifup/src/Utils.vala"
		_data_->_tmp1_ = _data_->launcher;
#line 82 "/run/build/gifup/src/Utils.vala"
		_data_->_tmp2_ = g_subprocess_launcher_spawnv (_data_->_tmp1_, _data_->spawn_args, &_data_->_inner_error_);
#line 82 "/run/build/gifup/src/Utils.vala"
		_data_->subprocess = _data_->_tmp2_;
#line 82 "/run/build/gifup/src/Utils.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 1125 "Utils.c"
			goto __catch2_g_error;
		}
#line 84 "/run/build/gifup/src/Utils.vala"
		_data_->_tmp3_ = _data_->subprocess;
#line 84 "/run/build/gifup/src/Utils.vala"
		_data_->_tmp4_ = g_subprocess_get_stdout_pipe (_data_->_tmp3_);
#line 84 "/run/build/gifup/src/Utils.vala"
		_data_->_tmp5_ = _g_object_ref0 (_data_->_tmp4_);
#line 84 "/run/build/gifup/src/Utils.vala"
		_data_->input_stream = _data_->_tmp5_;
#line 87 "/run/build/gifup/src/Utils.vala"
		_data_->_tmp6_ = _data_->input_stream;
#line 87 "/run/build/gifup/src/Utils.vala"
		_data_->_tmp7_ = g_data_input_stream_new (_data_->_tmp6_);
#line 87 "/run/build/gifup/src/Utils.vala"
		_data_->data_input_stream = _data_->_tmp7_;
#line 89 "/run/build/gifup/src/Utils.vala"
		while (TRUE) {
#line 91 "/run/build/gifup/src/Utils.vala"
			_data_->_tmp8_ = _data_->data_input_stream;
#line 91 "/run/build/gifup/src/Utils.vala"
			_data_->_state_ = 1;
#line 91 "/run/build/gifup/src/Utils.vala"
			g_data_input_stream_read_line_async (_data_->_tmp8_, G_PRIORITY_DEFAULT, NULL, gifup_utils_execute_command_async_ready, _data_);
#line 91 "/run/build/gifup/src/Utils.vala"
			return FALSE;
#line 1152 "Utils.c"
			_state_1:
#line 91 "/run/build/gifup/src/Utils.vala"
			_data_->_tmp9_ = g_data_input_stream_read_line_finish (_data_->_tmp8_, _data_->_res_, NULL, &_data_->_inner_error_);
#line 91 "/run/build/gifup/src/Utils.vala"
			_data_->str_return = _data_->_tmp9_;
#line 91 "/run/build/gifup/src/Utils.vala"
			if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 91 "/run/build/gifup/src/Utils.vala"
				_g_object_unref0 (_data_->data_input_stream);
#line 91 "/run/build/gifup/src/Utils.vala"
				_g_object_unref0 (_data_->input_stream);
#line 91 "/run/build/gifup/src/Utils.vala"
				_g_object_unref0 (_data_->subprocess);
#line 1166 "Utils.c"
				goto __catch2_g_error;
			}
#line 94 "/run/build/gifup/src/Utils.vala"
			_data_->_tmp10_ = _data_->str_return;
#line 94 "/run/build/gifup/src/Utils.vala"
			if (_data_->_tmp10_ == NULL) {
#line 95 "/run/build/gifup/src/Utils.vala"
				_data_->result = _data_->subprocess;
#line 95 "/run/build/gifup/src/Utils.vala"
				_g_free0 (_data_->str_return);
#line 95 "/run/build/gifup/src/Utils.vala"
				_g_object_unref0 (_data_->data_input_stream);
#line 95 "/run/build/gifup/src/Utils.vala"
				_g_object_unref0 (_data_->input_stream);
#line 95 "/run/build/gifup/src/Utils.vala"
				_g_object_unref0 (_data_->launcher);
#line 95 "/run/build/gifup/src/Utils.vala"
				g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 95 "/run/build/gifup/src/Utils.vala"
				if (_data_->_state_ != 0) {
#line 95 "/run/build/gifup/src/Utils.vala"
					while (_data_->_task_complete_ != TRUE) {
#line 95 "/run/build/gifup/src/Utils.vala"
						g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1191 "Utils.c"
					}
				}
#line 95 "/run/build/gifup/src/Utils.vala"
				g_object_unref (_data_->_async_result);
#line 95 "/run/build/gifup/src/Utils.vala"
				return FALSE;
#line 1198 "Utils.c"
			} else {
#line 97 "/run/build/gifup/src/Utils.vala"
				_data_->_tmp11_ = _data_->str_return;
#line 97 "/run/build/gifup/src/Utils.vala"
				g_message ("Utils.vala:97: %s", _data_->_tmp11_);
#line 1204 "Utils.c"
			}
#line 89 "/run/build/gifup/src/Utils.vala"
			_g_free0 (_data_->str_return);
#line 1208 "Utils.c"
		}
#line 80 "/run/build/gifup/src/Utils.vala"
		_g_object_unref0 (_data_->data_input_stream);
#line 80 "/run/build/gifup/src/Utils.vala"
		_g_object_unref0 (_data_->input_stream);
#line 80 "/run/build/gifup/src/Utils.vala"
		_g_object_unref0 (_data_->subprocess);
#line 1216 "Utils.c"
	}
	goto __finally2;
	__catch2_g_error:
	{
#line 80 "/run/build/gifup/src/Utils.vala"
		_data_->e = _data_->_inner_error_;
#line 80 "/run/build/gifup/src/Utils.vala"
		_data_->_inner_error_ = NULL;
#line 101 "/run/build/gifup/src/Utils.vala"
		_data_->_tmp12_ = _data_->e;
#line 101 "/run/build/gifup/src/Utils.vala"
		_data_->_tmp13_ = _data_->_tmp12_->message;
#line 101 "/run/build/gifup/src/Utils.vala"
		g_message ("Utils.vala:101: Erro %s", _data_->_tmp13_);
#line 102 "/run/build/gifup/src/Utils.vala"
		_data_->result = NULL;
#line 102 "/run/build/gifup/src/Utils.vala"
		_g_error_free0 (_data_->e);
#line 102 "/run/build/gifup/src/Utils.vala"
		_g_object_unref0 (_data_->launcher);
#line 102 "/run/build/gifup/src/Utils.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 102 "/run/build/gifup/src/Utils.vala"
		if (_data_->_state_ != 0) {
#line 102 "/run/build/gifup/src/Utils.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 102 "/run/build/gifup/src/Utils.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1245 "Utils.c"
			}
		}
#line 102 "/run/build/gifup/src/Utils.vala"
		g_object_unref (_data_->_async_result);
#line 102 "/run/build/gifup/src/Utils.vala"
		return FALSE;
#line 1252 "Utils.c"
	}
	__finally2:
#line 80 "/run/build/gifup/src/Utils.vala"
	_g_object_unref0 (_data_->launcher);
#line 80 "/run/build/gifup/src/Utils.vala"
	g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 80 "/run/build/gifup/src/Utils.vala"
	g_clear_error (&_data_->_inner_error_);
#line 80 "/run/build/gifup/src/Utils.vala"
	g_object_unref (_data_->_async_result);
#line 80 "/run/build/gifup/src/Utils.vala"
	return FALSE;
#line 1265 "Utils.c"
}


static Block3Data*
block3_data_ref (Block3Data* _data3_)
{
#line 106 "/run/build/gifup/src/Utils.vala"
	g_atomic_int_inc (&_data3_->_ref_count_);
#line 106 "/run/build/gifup/src/Utils.vala"
	return _data3_;
#line 1276 "Utils.c"
}


static void
block3_data_unref (void * _userdata_)
{
	Block3Data* _data3_;
	_data3_ = (Block3Data*) _userdata_;
#line 106 "/run/build/gifup/src/Utils.vala"
	if (g_atomic_int_dec_and_test (&_data3_->_ref_count_)) {
#line 106 "/run/build/gifup/src/Utils.vala"
		_g_free0 (_data3_->path);
#line 106 "/run/build/gifup/src/Utils.vala"
		_g_free0 (_data3_->selected_file);
#line 106 "/run/build/gifup/src/Utils.vala"
		_g_object_unref0 (_data3_->image_widget);
#line 106 "/run/build/gifup/src/Utils.vala"
		g_slice_free (Block3Data, _data3_);
#line 1295 "Utils.c"
	}
}


static void
__lambda5_ (Block3Data* _data3_,
            GObject* obj,
            GAsyncResult* async_res)
{
	GSubprocess* subprocess = NULL;
	GSubprocess* _tmp0_;
	GError * _inner_error_ = NULL;
#line 109 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (async_res != NULL);
#line 110 "/run/build/gifup/src/Utils.vala"
	_tmp0_ = gifup_utils_execute_command_finish (async_res);
#line 110 "/run/build/gifup/src/Utils.vala"
	subprocess = _tmp0_;
#line 1314 "Utils.c"
	{
		gboolean _tmp1_ = FALSE;
		GSubprocess* _tmp2_;
#line 112 "/run/build/gifup/src/Utils.vala"
		_tmp2_ = subprocess;
#line 112 "/run/build/gifup/src/Utils.vala"
		if (_tmp2_ != NULL) {
#line 1322 "Utils.c"
			gboolean _tmp3_ = FALSE;
			GSubprocess* _tmp4_;
#line 112 "/run/build/gifup/src/Utils.vala"
			_tmp4_ = subprocess;
#line 112 "/run/build/gifup/src/Utils.vala"
			_tmp3_ = g_subprocess_wait_check (_tmp4_, NULL, &_inner_error_);
#line 112 "/run/build/gifup/src/Utils.vala"
			if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 1331 "Utils.c"
				goto __catch3_g_error;
			}
#line 112 "/run/build/gifup/src/Utils.vala"
			_tmp1_ = _tmp3_;
#line 1336 "Utils.c"
		} else {
#line 112 "/run/build/gifup/src/Utils.vala"
			_tmp1_ = FALSE;
#line 1340 "Utils.c"
		}
#line 112 "/run/build/gifup/src/Utils.vala"
		if (_tmp1_) {
#line 1344 "Utils.c"
			gchar* start_path = NULL;
			const gchar* _tmp5_;
			gchar* _tmp6_;
			gboolean _tmp7_ = FALSE;
			const gchar* _tmp8_;
#line 113 "/run/build/gifup/src/Utils.vala"
			g_message ("Utils.vala:113: Image file sucess!");
#line 114 "/run/build/gifup/src/Utils.vala"
			_tmp5_ = g_get_tmp_dir ();
#line 114 "/run/build/gifup/src/Utils.vala"
			_tmp6_ = g_build_filename (_tmp5_, "gifup_start.bmp", NULL);
#line 114 "/run/build/gifup/src/Utils.vala"
			start_path = _tmp6_;
#line 115 "/run/build/gifup/src/Utils.vala"
			_tmp8_ = start_path;
#line 115 "/run/build/gifup/src/Utils.vala"
			if (g_file_test (_tmp8_, G_FILE_TEST_EXISTS)) {
#line 115 "/run/build/gifup/src/Utils.vala"
				_tmp7_ = _data3_->selected_file != NULL;
#line 1364 "Utils.c"
			} else {
#line 115 "/run/build/gifup/src/Utils.vala"
				_tmp7_ = FALSE;
#line 1368 "Utils.c"
			}
#line 115 "/run/build/gifup/src/Utils.vala"
			if (_tmp7_) {
#line 116 "/run/build/gifup/src/Utils.vala"
				gtk_image_set_from_file (_data3_->image_widget, _data3_->path);
#line 1374 "Utils.c"
			}
#line 112 "/run/build/gifup/src/Utils.vala"
			_g_free0 (start_path);
#line 1378 "Utils.c"
		}
	}
	goto __finally3;
	__catch3_g_error:
	{
		GError* e = NULL;
		GError* _tmp9_;
		const gchar* _tmp10_;
#line 111 "/run/build/gifup/src/Utils.vala"
		e = _inner_error_;
#line 111 "/run/build/gifup/src/Utils.vala"
		_inner_error_ = NULL;
#line 120 "/run/build/gifup/src/Utils.vala"
		_tmp9_ = e;
#line 120 "/run/build/gifup/src/Utils.vala"
		_tmp10_ = _tmp9_->message;
#line 120 "/run/build/gifup/src/Utils.vala"
		g_critical ("Utils.vala:120: %s", _tmp10_);
#line 121 "/run/build/gifup/src/Utils.vala"
		gifup_utils_create_dialog (_ ("Is a file selected?"));
#line 111 "/run/build/gifup/src/Utils.vala"
		_g_error_free0 (e);
#line 1401 "Utils.c"
	}
	__finally3:
#line 111 "/run/build/gifup/src/Utils.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 111 "/run/build/gifup/src/Utils.vala"
		_g_object_unref0 (subprocess);
#line 111 "/run/build/gifup/src/Utils.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 111 "/run/build/gifup/src/Utils.vala"
		g_clear_error (&_inner_error_);
#line 111 "/run/build/gifup/src/Utils.vala"
		return;
#line 1414 "Utils.c"
	}
#line 109 "/run/build/gifup/src/Utils.vala"
	_g_object_unref0 (subprocess);
#line 1418 "Utils.c"
}


static void
___lambda5__gasync_ready_callback (GObject* source_object,
                                   GAsyncResult* res,
                                   gpointer self)
{
#line 109 "/run/build/gifup/src/Utils.vala"
	__lambda5_ (self, source_object, res);
#line 109 "/run/build/gifup/src/Utils.vala"
	block3_data_unref (self);
#line 1431 "Utils.c"
}


void
gifup_utils_frame_picture (const gchar* selected_file,
                           const gchar* frame_number,
                           const gchar* file_name,
                           GtkImage* image_widget)
{
	Block3Data* _data3_;
	gchar* _tmp0_;
	GtkImage* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	gchar* _tmp6_;
	gchar** cmd = NULL;
	gchar* _tmp7_;
	gchar* _tmp8_;
	gchar* _tmp9_;
	gchar* _tmp10_;
	gchar* _tmp11_;
	gchar* _tmp12_;
	gchar* _tmp13_;
	gchar* _tmp14_;
	gchar* _tmp15_;
	gchar* _tmp16_;
	gchar* _tmp17_;
	gchar* _tmp18_;
	gchar* _tmp19_;
	gchar* _tmp20_;
	gchar** _tmp21_;
	gint cmd_length1;
	gint _cmd_size_;
#line 106 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (selected_file != NULL);
#line 106 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (frame_number != NULL);
#line 106 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (file_name != NULL);
#line 106 "/run/build/gifup/src/Utils.vala"
	g_return_if_fail (image_widget != NULL);
#line 106 "/run/build/gifup/src/Utils.vala"
	_data3_ = g_slice_new0 (Block3Data);
#line 106 "/run/build/gifup/src/Utils.vala"
	_data3_->_ref_count_ = 1;
#line 106 "/run/build/gifup/src/Utils.vala"
	_tmp0_ = g_strdup (selected_file);
#line 106 "/run/build/gifup/src/Utils.vala"
	_g_free0 (_data3_->selected_file);
#line 106 "/run/build/gifup/src/Utils.vala"
	_data3_->selected_file = _tmp0_;
#line 106 "/run/build/gifup/src/Utils.vala"
	_tmp1_ = _g_object_ref0 (image_widget);
#line 106 "/run/build/gifup/src/Utils.vala"
	_g_object_unref0 (_data3_->image_widget);
#line 106 "/run/build/gifup/src/Utils.vala"
	_data3_->image_widget = _tmp1_;
#line 107 "/run/build/gifup/src/Utils.vala"
	_tmp2_ = g_get_tmp_dir ();
#line 107 "/run/build/gifup/src/Utils.vala"
	_tmp3_ = g_strconcat (file_name, ".bmp", NULL);
#line 107 "/run/build/gifup/src/Utils.vala"
	_tmp4_ = _tmp3_;
#line 107 "/run/build/gifup/src/Utils.vala"
	_tmp5_ = g_build_filename (_tmp2_, _tmp4_, NULL);
#line 107 "/run/build/gifup/src/Utils.vala"
	_tmp6_ = _tmp5_;
#line 107 "/run/build/gifup/src/Utils.vala"
	_g_free0 (_tmp4_);
#line 107 "/run/build/gifup/src/Utils.vala"
	_data3_->path = _tmp6_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp7_ = g_strdup ("ffmpeg");
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp8_ = g_strdup ("-hide_banner");
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp9_ = g_strdup ("-loglevel");
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp10_ = g_strdup ("debug");
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp11_ = g_strdup ("-ss");
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp12_ = g_strdup_printf ("%i", gifup_utils_duration_in_seconds (frame_number));
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp13_ = g_strdup ("-i");
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp14_ = g_strdup (_data3_->selected_file);
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp15_ = g_strdup ("-frames:v");
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp16_ = g_strdup ("1");
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp17_ = g_strdup ("-filter:v");
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp18_ = g_strdup ("scale=150:-1");
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp19_ = g_strdup (_data3_->path);
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp20_ = g_strdup ("-y");
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_ = g_new0 (gchar*, 14 + 1);
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[0] = _tmp7_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[1] = _tmp8_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[2] = _tmp9_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[3] = _tmp10_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[4] = _tmp11_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[5] = _tmp12_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[6] = _tmp13_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[7] = _tmp14_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[8] = _tmp15_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[9] = _tmp16_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[10] = _tmp17_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[11] = _tmp18_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[12] = _tmp19_;
#line 108 "/run/build/gifup/src/Utils.vala"
	_tmp21_[13] = _tmp20_;
#line 108 "/run/build/gifup/src/Utils.vala"
	cmd = _tmp21_;
#line 108 "/run/build/gifup/src/Utils.vala"
	cmd_length1 = 14;
#line 108 "/run/build/gifup/src/Utils.vala"
	_cmd_size_ = cmd_length1;
#line 109 "/run/build/gifup/src/Utils.vala"
	gifup_utils_execute_command_async (cmd, cmd_length1, ___lambda5__gasync_ready_callback, block3_data_ref (_data3_));
#line 106 "/run/build/gifup/src/Utils.vala"
	cmd = (_vala_array_free (cmd, cmd_length1, (GDestroyNotify) g_free), NULL);
#line 106 "/run/build/gifup/src/Utils.vala"
	block3_data_unref (_data3_);
#line 106 "/run/build/gifup/src/Utils.vala"
	_data3_ = NULL;
#line 1577 "Utils.c"
}


static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}


static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}


static gint
_vala_array_length (gpointer array)
{
	int length;
	length = 0;
	if (array) {
		while (((gpointer*) array)[length]) {
			length++;
		}
	}
	return length;
}



