/* AdvanceOptions.c generated by valac 0.40.3, the Vala compiler
 * generated from AdvanceOptions.vala, do not modify */



#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <float.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <glib/gi18n-lib.h>


#define GIFUP_TYPE_ADVANCE_OPTIONS (gifup_advance_options_get_type ())
#define GIFUP_ADVANCE_OPTIONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GIFUP_TYPE_ADVANCE_OPTIONS, GifupAdvanceOptions))
#define GIFUP_ADVANCE_OPTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GIFUP_TYPE_ADVANCE_OPTIONS, GifupAdvanceOptionsClass))
#define GIFUP_IS_ADVANCE_OPTIONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GIFUP_TYPE_ADVANCE_OPTIONS))
#define GIFUP_IS_ADVANCE_OPTIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GIFUP_TYPE_ADVANCE_OPTIONS))
#define GIFUP_ADVANCE_OPTIONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GIFUP_TYPE_ADVANCE_OPTIONS, GifupAdvanceOptionsClass))

typedef struct _GifupAdvanceOptions GifupAdvanceOptions;
typedef struct _GifupAdvanceOptionsClass GifupAdvanceOptionsClass;
typedef struct _GifupAdvanceOptionsPrivate GifupAdvanceOptionsPrivate;
enum  {
	GIFUP_ADVANCE_OPTIONS_0_PROPERTY,
	GIFUP_ADVANCE_OPTIONS_NUM_PROPERTIES
};
static GParamSpec* gifup_advance_options_properties[GIFUP_ADVANCE_OPTIONS_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _GifupAdvanceOptions {
	GtkGrid parent_instance;
	GifupAdvanceOptionsPrivate * priv;
	GtkSpinButton* entry_width;
	GtkSpinButton* entry_height;
	GtkSpinButton* entry_fps;
};

struct _GifupAdvanceOptionsClass {
	GtkGridClass parent_class;
};


static gpointer gifup_advance_options_parent_class = NULL;

GType gifup_advance_options_get_type (void) G_GNUC_CONST;
GifupAdvanceOptions* gifup_advance_options_new (void);
GifupAdvanceOptions* gifup_advance_options_construct (GType object_type);
GtkLabel* gifup_utils_create_left_label (const gchar* text);
static void gifup_advance_options_finalize (GObject * obj);


GifupAdvanceOptions*
gifup_advance_options_construct (GType object_type)
{
	GifupAdvanceOptions * self = NULL;
	GtkSpinButton* _tmp0_;
	GtkSpinButton* _tmp1_;
	GtkSpinButton* _tmp2_;
	GtkLabel* _tmp3_;
	GtkLabel* _tmp4_;
	GtkSpinButton* _tmp5_;
	GtkSpinButton* _tmp6_;
	GtkSpinButton* _tmp7_;
	GtkSpinButton* _tmp8_;
	GtkLabel* _tmp9_;
	GtkLabel* _tmp10_;
	GtkSpinButton* _tmp11_;
	GtkSpinButton* _tmp12_;
	GtkSpinButton* _tmp13_;
	GtkLabel* _tmp14_;
	GtkLabel* _tmp15_;
	GtkSpinButton* _tmp16_;
#line 10 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	self = (GifupAdvanceOptions*) g_object_new (object_type, NULL);
#line 13 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_grid_set_column_spacing ((GtkGrid*) self, 12);
#line 14 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_grid_set_row_spacing ((GtkGrid*) self, 6);
#line 15 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_widget_set_margin_start ((GtkWidget*) self, 12);
#line 16 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_widget_set_margin_end ((GtkWidget*) self, 12);
#line 19 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp0_ = (GtkSpinButton*) gtk_spin_button_new_with_range ((gdouble) 500, (gdouble) 20000, (gdouble) 1);
#line 19 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	g_object_ref_sink (_tmp0_);
#line 19 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_g_object_unref0 (self->entry_height);
#line 19 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	self->entry_height = _tmp0_;
#line 20 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp1_ = self->entry_height;
#line 20 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp1_, TRUE);
#line 21 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp2_ = self->entry_height;
#line 21 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_spin_button_set_value (_tmp2_, (gdouble) 300);
#line 22 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp3_ = gifup_utils_create_left_label (_ ("Gif height:"));
#line 22 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp4_ = _tmp3_;
#line 22 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp4_, 0, 0, 1, 1);
#line 22 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_g_object_unref0 (_tmp4_);
#line 23 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp5_ = self->entry_height;
#line 23 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp5_, 1, 0, 1, 1);
#line 26 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp6_ = (GtkSpinButton*) gtk_spin_button_new_with_range ((gdouble) 500, (gdouble) 20000, (gdouble) 1);
#line 26 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	g_object_ref_sink (_tmp6_);
#line 26 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_g_object_unref0 (self->entry_width);
#line 26 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	self->entry_width = _tmp6_;
#line 27 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp7_ = self->entry_width;
#line 27 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp7_, TRUE);
#line 28 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp8_ = self->entry_width;
#line 28 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_spin_button_set_value (_tmp8_, (gdouble) 300);
#line 29 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp9_ = gifup_utils_create_left_label (_ ("Gif width:"));
#line 29 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp10_ = _tmp9_;
#line 29 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp10_, 0, 1, 1, 1);
#line 29 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_g_object_unref0 (_tmp10_);
#line 30 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp11_ = self->entry_width;
#line 30 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp11_, 1, 1, 1, 1);
#line 33 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp12_ = (GtkSpinButton*) gtk_spin_button_new_with_range ((gdouble) 1, (gdouble) 200, (gdouble) 1);
#line 33 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	g_object_ref_sink (_tmp12_);
#line 33 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_g_object_unref0 (self->entry_fps);
#line 33 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	self->entry_fps = _tmp12_;
#line 34 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp13_ = self->entry_fps;
#line 34 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_spin_button_set_value (_tmp13_, (gdouble) 10);
#line 35 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp14_ = gifup_utils_create_left_label (_ ("Frames Per Seconds:"));
#line 35 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp15_ = _tmp14_;
#line 35 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp15_, 0, 2, 1, 1);
#line 35 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_g_object_unref0 (_tmp15_);
#line 36 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_tmp16_ = self->entry_fps;
#line 36 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp16_, 1, 2, 1, 1);
#line 10 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	return self;
#line 169 "AdvanceOptions.c"
}


GifupAdvanceOptions*
gifup_advance_options_new (void)
{
#line 10 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	return gifup_advance_options_construct (GIFUP_TYPE_ADVANCE_OPTIONS);
#line 178 "AdvanceOptions.c"
}


static void
gifup_advance_options_class_init (GifupAdvanceOptionsClass * klass)
{
#line 4 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	gifup_advance_options_parent_class = g_type_class_peek_parent (klass);
#line 4 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	G_OBJECT_CLASS (klass)->finalize = gifup_advance_options_finalize;
#line 189 "AdvanceOptions.c"
}


static void
gifup_advance_options_instance_init (GifupAdvanceOptions * self)
{
}


static void
gifup_advance_options_finalize (GObject * obj)
{
	GifupAdvanceOptions * self;
#line 4 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, GIFUP_TYPE_ADVANCE_OPTIONS, GifupAdvanceOptions);
#line 6 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_g_object_unref0 (self->entry_width);
#line 7 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_g_object_unref0 (self->entry_height);
#line 8 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	_g_object_unref0 (self->entry_fps);
#line 4 "/run/build/gifup/src/Widgets/AdvanceOptions.vala"
	G_OBJECT_CLASS (gifup_advance_options_parent_class)->finalize (obj);
#line 213 "AdvanceOptions.c"
}


GType
gifup_advance_options_get_type (void)
{
	static volatile gsize gifup_advance_options_type_id__volatile = 0;
	if (g_once_init_enter (&gifup_advance_options_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (GifupAdvanceOptionsClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) gifup_advance_options_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (GifupAdvanceOptions), 0, (GInstanceInitFunc) gifup_advance_options_instance_init, NULL };
		GType gifup_advance_options_type_id;
		gifup_advance_options_type_id = g_type_register_static (gtk_grid_get_type (), "GifupAdvanceOptions", &g_define_type_info, 0);
		g_once_init_leave (&gifup_advance_options_type_id__volatile, gifup_advance_options_type_id);
	}
	return gifup_advance_options_type_id__volatile;
}



